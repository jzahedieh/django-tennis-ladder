version: '3'

services:
  nginx:
    build: ./docker/nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./static:/var/www/static
    env_file:
      - ./.env.prod
    command: /bin/sh -c "envsubst '\$$NGINX_HOST' < /etc/nginx/conf.d/app.conf.template > /etc/nginx/conf.d/app.conf
      && htpasswd -nb $$ADMINER_USER $$ADMINER_PASSWORD > /etc/nginx/conf.d/.adminer.htpasswd
      && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"
    depends_on:
      - web
      - adminer
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env.prod
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/db-backup:/backup
  adminer:
    image: adminer:4-fastcgi
    restart: unless-stopped
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    restart: unless-stopped
    command: ./docker/web/start.sh
    env_file:
      - ./.env.prod
    volumes:
      - .:/code
      - ./static:/static
    depends_on:
      - db